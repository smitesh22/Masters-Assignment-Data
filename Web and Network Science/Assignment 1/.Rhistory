tube_data <- V(dib_graph)[V(dib_graph)$name %in% tube]
tube_data_career <- tube_data$career
tube_data_century <- tube_data$century
library(dplyr)
# percentages void of tendrils and disconnected vertices
components_prop <- c(length(scc)/length(vertices), length(IN_component)/length(vertices),
length(OUT_component)/length(vertices), length(tube)/(length(vertices)))
names(components_prop) <- c("SCC", "IN Component", "OUT component", "Tube")
kable(components_prop, col.names = "Percentage")
library(dplyr)
#list of careers splited by the comma and combined in a single list
#the  sort by descending order and take top 5
scc_career <- trimws(unlist(strsplit(scc_career, split = ",")))
scc_career <- as_tibble(table(scc_career)) %>%
arrange(desc(n)) %>%
head(5)
IN_component_career <- trimws(unlist(strsplit(IN_component_career, split = ",")))
IN_component_career <- as_tibble(table(IN_component_career)) %>%
arrange(desc(n)) %>%
head(5)
OUT_component_career <- trimws(unlist(strsplit(OUT_component_career, split = ",")))
OUT_component_career <- as_tibble(table(OUT_component_career)) %>%
arrange(desc(n)) %>%
head(5)
tube_component_career <- trimws(unlist(strsplit(tube_data_career, split = ",")))
tube_component_career <- as_tibble(table(tube_component_career)) %>%
arrange(desc(n)) %>%
head(5)
names(scc_career)[1] <- "SCC career"
names(IN_component_career)[1] <- "In career"
names(OUT_component_career)[1] <- "Out career"
names(tube_component_career)[1] <- "Tube career"
names(scc_career)[2] <- "SCC Count"
names(IN_component_career)[2] <- "In Count"
names(OUT_component_career)[2] <- "Out Count"
names(tube_component_career)[2] <- "Tube Count"
first_table <- cbind(scc_career, IN_component_career) %>%
gt() %>%
tab_header("Top Five Career in SCC and IN Component") %>%
tab_spanner(label = "SCC", columns = c("SCC career", "SCC Count")) %>%
tab_spanner(label = "IN Component", columns = c("In career", "In Count"))
second_table <- cbind(OUT_component_career, tube_component_career) %>%
gt() %>%
tab_header("Top Five Career in OUT Component and Tube") %>%
tab_spanner(label = "OUT Component", columns = c("Out career", "Out Count")) %>%
tab_spanner(label = "Tube Component", columns = c("Tube career", "Tube Count"))
first_table
second_table
library(dplyr)
#list of centuries in single list the  sort by descending
#order and take top 5
scc_century <- as_tibble(table(scc_century)) %>%
arrange(desc(n)) %>%
head()
IN_component_century <- as_tibble(table(IN_component_century)) %>%
arrange(desc(n)) %>%
head()
OUT_component_century <- as_tibble(table(OUT_component_century)) %>%
arrange(desc(n)) %>%
head()
tube_component_century <- as_tibble(table(tube_data_century)) %>%
arrange(desc(n)) %>%
head()
names(scc_century)[1] <- "SCC century"
names(IN_component_century)[1] <- "In century"
names(OUT_component_century)[1] <- "Out century"
names(tube_component_century)[1] <- "Tube century"
names(scc_century)[2] <- "SCC count"
names(IN_component_century)[2] <- "In count"
names(OUT_component_century)[2] <- "Out count"
names(tube_component_century)[2] <- "Tube count"
cbind(scc_century, IN_component_century, OUT_component_century, tube_component_century) %>%
gt() %>%
tab_header("Top Five Century in SCC, IN Component, OUT Component, Tube") %>%
tab_spanner(label = "SCC", columns = c("SCC century", "SCC count")) %>%
tab_spanner(label = "IN Component", columns = c("In century", "In count")) %>%
tab_spanner(label = "OUT Component", columns = c("Out century", "Out count")) %>%
tab_spanner(label = "Tube Component", columns = c("Tube century", "Tube count"))
### Tendril detection on graph from week2 lab
# week 2 code
scc_comp <- c("Maria","John", "Sue", "Maria", "Sue", "John",
"Zoe","Sue", "John", "Zoe","John","Paul", "Paul","Zoe")
# out-component
out_comp <- c("Peter", "Petra", "Petra", "Greta", "Petra", "Ina",
"Petra","Carlos", "Carlos","Owen","Carlos","Noel",
"Carlos","Mark")
# in -component
in_comp <- c("Jane", "Rose", "Rose", "Sean", "Rose", "Steve", "Sean","Steve", "Sean","Karen")
# tube component
tube_comp<- c("Una","Vera","Vera","Con", "Una","Nora", "Nora","Con")
# isolated component
iso1 <-c("Tobias", "Shirvo","Shirvo", "Lucy", "Lucy", "Tobias", "Lucy", "Pam")
iso2 <-c("Ron", "Joey","Joey", "Tadhg", "Ron", "Ken","Ken", "Mags")
# create a vector of edges between the components
# from in_component to scc
in_scc<- c("Steve","Maria", "Karen","Sue")
# from scc to out_component
scc_out<- c("Paul","Peter", "Paul","Greta")
# from in_component to tube
in_tube<-c("Sean","Una")
# from tube to out_component
tube_out<-c("Con","Owen")
# make the graph based on the component vertices
g<-make_graph(c(scc_comp, out_comp, in_comp, tube, iso1, iso2),directed=T)
# adding a in-tendril Jane -> Smitesh Patil
g <- g + vertices("Smitesh Patil")
g <- g + edges("Jane", "Smitesh Patil")
# adding a out-tendril Patil Smitesh -> Peter
g <- g + vertices("Patil Smitesh")
g <- g + edges("Patil Smitesh", "Peter")
vertices <- V(g)
# pos_tendril(possible tendril) containes vertices that are not in scc,
#in, out, tube can contain disconnected vertices
in_tendril = c()
pos_tendril = vertices[!(vertices$name %in% c(scc_comp, in_comp, out_comp,
tube_comp))]$name
# create a subgraph that contains just the In-component and possible
#tendril
nodes_IN_component_Tendrils <- vertices[vertices$name %in% c(pos_tendril, in_comp)]
g_IN_component_Tendrils <- induced.subgraph(g, nodes_IN_component_Tendrils)
# check the nodes in the subgrah from in component to the possible
# tendril
for (v in pos_tendril) {
paths <- all_simple_paths(g_IN_component_Tendrils, from = v,
to = V(g_IN_component_Tendrils)[in_comp],
mode = "in", cutoff = -1)
if (length(paths) > 0) {
in_tendril <- c(in_tendril, v)
}
}
# check the nodes in the subgrah from possible tendril to the out
# component
out_tendril <- c()
nodes_OUT_component_Tendrils <- vertices[vertices$name %in% c(pos_tendril,
out_comp)]
g_OUT_component_Tendrils <- induced.subgraph(g, nodes_OUT_component_Tendrils)
for (v in pos_tendril) {
paths <- all_simple_paths(g_OUT_component_Tendrils, from = v,
to = V(g_OUT_component_Tendrils)[out_comp],
mode = "out", cutoff = -1)
if (length(paths) > 0) {
out_tendril <- c(out_tendril, v)
}
}
cat("IN Tendril detected ", in_tendril)
cat("OUT Tendril detected ",out_tendril)
### tendril detection from code above for dib_graph
vertices = V(dib_graph)
in_tendril = c()
Tendril = vertices[!(vertices$name %in% c(scc, IN_component, OUT_component,
tube))]$name
nodes_IN_component_Tendrils <- vertices[vertices$name %in% c(Tendril, IN_component)]
g_IN_component_Tendrils <- induced.subgraph(dib_graph, nodes_IN_component_Tendrils)
for (v in Tendril) {
paths <- all_simple_paths(g_IN_component_Tendrils, from = v,
to = V(g_IN_component_Tendrils)[IN_component],
mode = "in", cutoff = -1)
if (length(paths) > 0) {
in_tendril <- c(in_tendril, v)
}
}
out_tendril <- c()
nodes_OUT_component_Tendrils <- vertices[vertices$name %in% c(Tendril,
OUT_component)]
g_OUT_component_Tendrils <- induced.subgraph(dib_graph, nodes_OUT_component_Tendrils)
for (v in Tendril) {
paths <- all_simple_paths(g_OUT_component_Tendrils, from = v,
to = V(g_OUT_component_Tendrils)[OUT_component],
mode = "out", cutoff = -1)
if (length(paths) > 0) {
out_tendril <- c(out_tendril, v)
}
}
cat("There are ", length(in_tendril), " vertices in IN Tendrils")
cat("There are ", length(out_tendril), " vertices in OUT Tendrils")
library(sjmisc)
century_data <- list(
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 9]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 10]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 11]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 12]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 13]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 14]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 15]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 16]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 17]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 18]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 19]),
induced.subgraph(dib_graph, V(dib_graph)[V(dib_graph)$century == 20]))
page_rank <- vector(mode = "list", length = 12)
authority <- vector(mode = "list", length = 12)
eigen_centrality <- vector(mode = "list", length = 12)
between <- vector(mode = "list", length = 12)
close <- vector(mode = "list", length = 12)
century_list <- c("9th century", "10th century", "11th century", "12th century",
"13th century", "14th century", "15th century", "16th century", "17th century",
"18th century", "19th century", "20th century")
names(century_data) <- century_list
for (i in 1:length(century_data)) {
page_rank[[i]] <- page_rank(century_data[[i]], directed = TRUE, damping = 0.85)$vector
page_rank[[i]] <- page_rank[[i]] %>%
sort(decreasing = TRUE) %>%
head(1)
page_rank[[i]] <- paste(names(page_rank[[i]]), "\n", round(page_rank[[i]],
2))
eigen_centrality[[i]] <- eigen_centrality(century_data[[i]], weights = NA)$vector
eigen_centrality[[i]] <- eigen_centrality[[i]] %>%
sort(decreasing = TRUE) %>%
head(1)
eigen_centrality[[i]] <- paste(names(eigen_centrality[[i]]), "\n",
round(eigen_centrality[[i]], 2))
between[[i]] <- betweenness(century_data[[i]], weights = NA)
between[[i]] <- between[[i]] %>%
sort(decreasing = TRUE) %>%
head(1)
between[[i]] <- paste(names(between[[i]]), "\n", round(between[[i]],
2))
authority[[i]] <- authority_score(century_data[[i]], scale = TRUE)$vector
authority[[i]] <- authority[[i]] %>%
sort(decreasing = TRUE) %>%
head(1)
authority[[i]] <- paste(names(authority[[i]]), "\n", round(authority[[i]],
2))
}
out <- tibble("Authority" = unlist(authority),
"Page Rank" = unlist(page_rank),
"Betweeness" = unlist(between))
out <- rotate_df(out)
colnames(out) <- century_list
out <- as.data.frame(out)
first <- out[c("9th century", "10th century", "11th century", "12th century")] %>%
gt(rownames_to_stub = TRUE) %>%
tab_header(title = "1. Centrality for centuries from 9th to 12th")
second <- out[c("10th century", "11th century", "12th century", "13th century")] %>%
gt(rownames_to_stub = TRUE) %>%
tab_header(title = "2. Centrality for centuries from 10th to 13th")
third <- out[c("14th century", "15th century", "16th century", "17th century")] %>%
gt(rownames_to_stub = TRUE) %>%
tab_header(title = "3. Centrality for centuries from 14th to 17th")
fourth <- out[c("18th century", "19th century", "20th century")] %>%
gt(rownames_to_stub = TRUE) %>%
tab_header(title = "4. Centrality for centuries from 18th to 20th")
first
second
third
fourth
hist(log(deg), breaks = 20, xlab = "In-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white",
xlim = c(0,200))
hist(log(deg), breaks = 20, xlab = "In-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white",
xlim = c(0,2000))
hist(log(deg), breaks = 20, xlab = "In-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white",
ylim = c(0,100))
hist(log(deg), breaks = 20, xlab = "In-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white",
ylim = c(0,200))
hist(log(deg), breaks = 20, xlab = "In-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white",
ylim = c(0,2000))
hist(log(deg), breaks = 20, xlab = "In-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white",
)
deg <- degree(dib_graph, mode = "in")
cat("The in-degree distribution of the graph varies from ", min(deg), "to ",
max(deg))
hist(log(deg), breaks = 20, xlab = "In-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white",
)
hist(deg, breaks = 20, xlab = "In-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white",
)
hist(deg, breaks = (min(deg) - 1):(max(deg)) + 0.5, xlab = "Out-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white")
hist(log(deg), breaks = (min(log(deg)) - 1):(max(log(deg))) + 0.5, xlab = "Out-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white")
hist(log(deg), breaks = (min(deg) - 1):(max(deg)) + 0.5, xlab = "Out-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white")
```{r}
hist(log(deg), breaks = 20, xlab = "Out-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white")
hist(log(deg), breaks = (min(deg) - 1):(max(deg)) + 0.5, xlab = "Out-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white")
hist(log(deg), breaks = (min(deg/100) - 1):(max(deg/100)) + 0.5, xlab = "Out-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white")
hist(log(deg), breaks = (min(deg) - 1):(max(deg)) + 0.5, xlab = "Out-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white")
hist(deg, breaks = (min(deg) - 1):(max(deg) - 1) + 0.5, xlab = "Out-degree",
ylab = "Proportion", main = "Histogram of In-Degree Distribution",
border = "black", col = "white")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
df <- read.csv("Counsumer_Price_Index.csv")
sav <- df %>%
filter(ï..Location %in% c("IRL", "CAN", "AUS",
"USA", "FRA", "DEU",
"ESP", "ITA")) %>%
filter(Time == 2021) %>%
filter(Subject != "Energy")
sav
sav %>% ggplot(aes(x = Percentage, y = ï..Location, fill = Subject)) +
geom_point(aes(colour = Subject), size = 2.5) +
geom_segment(aes(yend = ï..Location, colour = Subject), xend = 0 , linetype="dotted") + theme_light()
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5, position = position_dodge(0.5)) +
geom_linerange(aes(ymin = 0, ymax = Percentage),
linetype = "dotted", position = position_dodge(0.5)) +
coord_flip() +
theme_light()
library(colorblindr)
sav
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5, position = position_dodge(0.5))
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5)
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_grid(~Subject)
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject)
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
geom_line(linetype="dotted", color = "grey")
facet_wrap(~Subject) +
coord_flip()
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
geom_line(linetype="dotted", color = "grey") +
facet_wrap(~Subject) +
coord_flip()
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()
df %>%
rename(Location = ï..Location)
sav <- df %>%
filter(Location %in% c("IRL", "CAN", "AUS",
"USA", "FRA", "DEU",
"ESP", "ITA")) %>%
filter(Time == 2021) %>%
filter(Subject != "Energy")
df <- read.csv("Counsumer_Price_Index.csv")
df <- df %>%
rename(Location = ï..Location)
sav <- df %>%
filter(Location %in% c("IRL", "CAN", "AUS",
"USA", "FRA", "DEU",
"ESP", "ITA")) %>%
filter(Time == 2021) %>%
filter(Subject != "Energy")
sav
)
sav
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5, position = position_dodge(0.5)) +
geom_linerange(aes(ymin = 0, ymax = Percentage),
linetype = "dotted", position = position_dodge(0.5)) +
coord_flip() +
theme_light()
sav %>%
ggplot(aes(x = ï..Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()
sav %>%
ggplot(aes(x = Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5, position = position_dodge(0.5)) +
geom_linerange(aes(ymin = 0, ymax = Percentage),
linetype = "dotted", position = position_dodge(0.5)) +
coord_flip() +
theme_light()
sav %>%
ggplot(aes(x = Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()
sav %>%
ggplot(aes(x = Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()
sav$Location
names(sav$Location)
factor(sav$Location)
save %>% arrange(desc(Percentage, Subject))
sav %>%
arrange(desc(Percentage, Subject))
sav %>%
arrange(desc(c(Percentage, Subject)))
sav %>%
arrange(desc(Percentage))
arrange(desc(Percentage)) %>% select(Location) %>% unique()
sav %>%
arrange(desc(Percentage)) %>% select(Location) %>% unique()
temp <- sav %>%
arrange(desc(Percentage)) %>% select(Location) %>% unique()
levels(sav$Location) <- temp
levels(sav$Location)
sav %>%
ggplot(aes(x = Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()
levels(sav$Location)
factor(sav$Location)
sav <- df %>%
filter(Location %in% c("IRL", "CAN", "AUS",
"USA", "FRA", "DEU",
"ESP", "ITA")) %>%
filter(Time == 2021) %>%
filter(Subject != "Energy")
sav %>%
ggplot(aes(x = Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5, position = position_dodge(0.5)) +
geom_linerange(aes(ymin = 0, ymax = Percentage),
linetype = "dotted", position = position_dodge(0.5)) +
coord_flip() +
theme_light()
sav %>%
ggplot(aes(x = Location, y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()
factor(sav$name)
factor(sav$Location)
data$Treatment <- factor(data$Treatment, levels=c("IRL", "AUS", "USA", "DEU", "CAN", "ESP", "ITA", "FRA"))
sav$Location <- factor(data$Treatment, levels=c("IRL", "AUS", "USA", "DEU", "CAN", "ESP", "ITA", "FRA"))
sav %>%
ggplot(aes(x = factor(Location, levels = c("IRL", "AUS", "USA", "DEU", "CAN", "ESP", "ITA", "FRA")), y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()
sav %>%
ggplot(aes(x = factor(Location,  levels = c("IRL", "AUS", "USA", "DEU", "CAN", "ESP", "ITA", "FRA")), y = Percentage, colour = Subject)) +
geom_point(size = 2.5, position = position_dodge(0.5)) +
geom_linerange(aes(ymin = 0, ymax = Percentage),
linetype = "dotted", position = position_dodge(0.5)) +
coord_flip() +
theme_light()
sav %>%
ggplot(aes(x = factor(Location,  levels = c("IRL", "AUS", "USA", "DEU", "CAN", "ESP", "ITA", "FRA")), y = Percentage, colour = Subject)) +
geom_point(size = 2.5, position = position_dodge(0.5)) +
geom_linerange(aes(ymin = 0, ymax = Percentage),
linetype = "dotted", position = position_dodge(0.5)) +
coord_flip() +
theme_light() +
xlab("Countries --> ") +
ylab("Increase in CPI by % -->")
sav %>%
ggplot(aes(x = factor(Location, levels = c("IRL", "AUS", "USA", "DEU", "CAN", "ESP", "ITA", "FRA")), y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()
sav %>%
ggplot(aes(x = factor(Location, levels = c("IRL", "AUS", "USA", "DEU", "CAN", "ESP", "ITA", "FRA")), y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()+
xlab("Countries --> ") +
ylab("Increase in CPI by % -->")+
theme_linedraw()
sav %>%
ggplot(aes(x = factor(Location, levels = c("IRL", "AUS", "USA", "DEU", "CAN", "ESP", "ITA", "FRA")), y = Percentage, colour = Subject)) +
geom_point(size = 2.5) +
facet_wrap(~Subject) +
coord_flip()+
xlab("Countries --> ") +
ylab("Increase in CPI by % -->")+
theme_light()
library(colorblindr)
sav %>% arrange(Percentage) %>%
ggplot(aes(x = Percentage, y = Location, fill = Subject)) +
geom_col(position="dodge", alpha=0.85)+
sav %>% arrange(Percentage) %>%
ggplot(aes(x = Percentage, y = Location, fill = Subject)) +
geom_col(position="dodge", alpha=0.85)
sav %>% arrange(Percentage) %>%
ggplot(aes(x = Percentage, y = Location, fill = Subject)) +
geom_bar()
