#changeing x ticks for graph
scale_x_continuous(limits = c(10000, 19000),
breaks = seq(10000, 19000, by = 1000),
name = "Confirmed Cases (Per 100,000 people) -->")+
scale_y_discrete(name = "Counties -->")+
#adding the mean line mark
annotate(x=mean_daily_cases+900, y=1, label="<- mean line", color="black",
geom = "text", lineheight = .6)+
#theme set
theme_minimal()+
#title
ggtitle("Confirmed Cases for counties compared to average on 21st Dec 21")+
#caption
labs(caption = "Source: Covid Data Ireland")+
#for legend position
theme(legend.position = "top",
legend.title = element_blank())
#normalising for plotting
IRL_Covid19_plot2 <- IRL_counties_Covid19%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
# getting a list of means by counties and taking the first and last form highest
#and lowest values of cumulative data
mean <- IRL_counties_Covid19 %>%
#dropping geometry for summarising
st_drop_geometry() %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))%>%
select(CountyName, DailyCCase_per_100k) %>%
group_by(CountyName) %>%
#getting mean by grouping on county name
summarise(mean = mean(DailyCCase_per_100k, na.rm = TRUE)) %>%
#arrange desc of mean
arrange(desc(mean))
# get the data of galway and county with lowest and highest cumulative scores
select_county_data<- IRL_counties_Covid19%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))%>%
filter(CountyName %in% c("Galway", head(mean$CountyName, 1), tail(mean$CountyName, 1)))
# for rest of the counties
other_counties<- IRL_counties_Covid19%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))%>%
filter(!CountyName %in% c("Galway", head(mean$CountyName, 1), tail(mean$CountyName, 1)))
#for plotting plot2
IRL_Covid19_plot2 %>%
#loading aesthetics for graphy
ggplot(aes(x = TimeStamp, y=ConfirmedC_per_100k, color = color))+
# for other counties a faded grey shade
geom_smooth(data = other_counties,aes(group = CountyName, colour = "#d3d3d3" ),
size = 1, alpha = 0.9, na.rm = TRUE, method = "loess", se = FALSE)+
# individual colors for galway and highest, lowest counties
geom_smooth(data = select_county_data, aes(group = CountyName, color = CountyName),
size = 1, alpha = 0.8, na.rm = TRUE, method = "loess", se = FALSE)+
# settings colors
scale_color_manual(values = c("#d3d3d3", palette[3],palette[6] , palette[4]),
labels = c("Others", "Galway", "Monaghan", "Wicklow"))+
# setting labels on a sequence of values for y axis
scale_y_continuous(limits = c(0, 19000),
breaks = seq(0, 19000, by = 2000),
name = "Confirmed Cases (Per 100,000 people) -->")+
# setting dates on the x axis
scale_x_date(date_breaks = "months", date_labels = "%b-%y",
name = "Time -->")+
#title
ggtitle("Cumulative Covid cases in Galway compared to Other counties")+
#labels
labs(caption = "Source: Covid Data Ireland")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 50, vjust = 0.5, hjust=1),
axis.title.x = element_text(vjust = -2.5),
legend.position = "top",
legend.title = element_blank())
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
plot_3 <- plot_3[plot_3$TimeStamp == ymd("2021-01-01") | plot_3$TimeStamp == ymd("2021-01-29"),]
View(plot_3)
plot_3 <- plot_3[plot_3$TimeStamp == ymd("2021-01-01") | plot_3$TimeStamp ==ymd("2021-01-29"),]%>%
select(CountyName, ConfirmedC_per_100k)
View(plot_3)
plot_3 %>%
pivot_wider.sf(names_from = ConfirmedC_per_100k, geometry, values_from = CountyName)
plot_3 %>%
pivot_wider.sf(names_from = ConfirmedC_per_100k, geometry, values_from = CountyName)
plot_3 %>%
pivot_wider(names_from = ConfirmedC_per_100k, geometry, values_from = CountyName)
pivot_wider.sf(names_from = ConfirmedC_per_100k, geometry, values_from = CountyName)
plot_3 %>%
pivot_wider.sf(names_from = ConfirmedC_per_100k, geometry, values_from = CountyName)
plot_3 %>%
pivot_wider(names_from = ConfirmedC_per_100k, geometry, values_from = CountyName)
pivot_wider.sf(plot_3, names_from = ConfirmedC_per_100k, geometry, values_from = CountyName
pivot_wider.sf(plot_3, names_from = ConfirmedC_per_100k, geometry, values_from = CountyName)
pivot_wider.sf(plot_3, names_from = ConfirmedC_per_100k, geometry, values_from = CountyName)
pivot_wider.sf(plot_3, names_from = (ConfirmedC_per_100k, geometry), values_from = CountyName)
pivot_wider.sf(plot_3, names_from = c(ConfirmedC_per_100k, geometry), values_from = CountyName)
pivot_wider(plot_3, names_from = c(ConfirmedC_per_100k, geometry), values_from = CountyName)
library(tidyr)
install.packages("installr")
library(installr)
updateR()
pivot_wider(plot_3, names_from = c(ConfirmedC_per_100k, geometry), values_from = CountyName)
pivot_wider.sf(plot_3, names_from = c(ConfirmedC_per_100k, geometry), values_from = CountyName)
library(tidyr)
knitr::opts_chunk$set(echo = TRUE)
#Importing Libraries
library(sf)
library(dplyr)
library(ggplot2)
library(lubridate)
library(colorblindr)
#loading the shape file
IRL_counties_Covid19 <- st_read("C:\\Users\\Smitesh\\Documents\\Football Data Analysis\\Data\\Data Visualization\\Assignment 2\\CovidCountyStatisticsIreland_v2.shp", quiet = TRUE)
#ignore warnings
options(warn=-1)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
library(tidyr)
library(tidyr)
library(dplyr)
library(tidyverse)
update.packages("cli")
library(tidyverse)
update.packages("cli")
library(cli)
library("devtools")
.libPaths()
remove.packages("cli", lib="~/R/win-library/4.1")
update.packages("cli")
install.packages(cli)
install.packages("cli")
install.packages(cli)
install.packages("cli")
library(tidyr)
knitr::opts_chunk$set(echo = TRUE)
#Importing Libraries
library(sf)
library(dplyr)
library(ggplot2)
library(lubridate)
library(colorblindr)
#loading the shape file
IRL_counties_Covid19 <- st_read("C:\\Users\\Smitesh\\Documents\\Football Data Analysis\\Data\\Data Visualization\\Assignment 2\\CovidCountyStatisticsIreland_v2.shp", quiet = TRUE)
#ignore warnings
options(warn=-1)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
pivot_wider(plot_3, names_from = c(ConfirmedC_per_100k, geometry), values_from = CountyName)
knitr::opts_chunk$set(echo = TRUE)
#Importing Libraries
library(sf)
library(dplyr)
library(ggplot2)
library(lubridate)
library(colorblindr)
#loading the shape file
IRL_counties_Covid19 <- st_read("C:\\Users\\Smitesh\\Documents\\Football Data Analysis\\Data\\Data Visualization\\Assignment 2\\CovidCountyStatisticsIreland_v2.shp", quiet = TRUE)
#ignore warnings
options(warn=-1)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
#loading colorblind colors
palette <- colorblindr::palette_OkabeIto
#normalising dailyccases and confirmdccases
IRL_Covid19_2021_12_21<- IRL_counties_Covid19%>%
filter(TimeStamp == ymd("2021-12-21"))%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
#getting the mean of confirmed cases per 100k for plotting
mean_daily_cases <- IRL_Covid19_2021_12_21 %>%
select(ConfirmedC_per_100k) %>%
st_drop_geometry() %>%
unlist() %>%
mean()
#for plotting the graph
IRL_Covid19_2021_12_21 %>%
# creating color column for plotting color different for galay, less than mean and
#more than mean
mutate(color = ifelse(CountyName == "Galway", "1",
ifelse(ConfirmedC_per_100k < mean_daily_cases, "2", "3"))) %>%
#loading aesthetics for the graphy reordering for sorting
ggplot(aes(x = ConfirmedC_per_100k, y = reorder(CountyName,ConfirmedC_per_100k)))+
#geom_point for dot plot
geom_point(size = 2, aes(color = color))+
#mean line
geom_vline(aes(xintercept = mean_daily_cases))+
#support line
geom_linerange(aes(xmin = mean_daily_cases, xmax = ConfirmedC_per_100k, color = color),
linetype = "dashed")+
#setting colors and lables
scale_color_manual(values = c(palette[6], palette[5], palette[1]),
labels = c("Galway", "Counties better than average",
"Counties worse than average"))+
#changeing x ticks for graph
scale_x_continuous(limits = c(10000, 19000),
breaks = seq(10000, 19000, by = 1000),
name = "Confirmed Cases (Per 100,000 people) -->")+
scale_y_discrete(name = "Counties -->")+
#adding the mean line mark
annotate(x=mean_daily_cases+900, y=1, label="<- mean line", color="black",
geom = "text", lineheight = .6)+
#theme set
theme_minimal()+
#title
ggtitle("Confirmed Cases for counties compared to average on 21st Dec 21")+
#caption
labs(caption = "Source: Covid Data Ireland")+
#for legend position
theme(legend.position = "top",
legend.title = element_blank())
#normalising for plotting
IRL_Covid19_plot2 <- IRL_counties_Covid19%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
# getting a list of means by counties and taking the first and last form highest
#and lowest values of cumulative data
mean <- IRL_counties_Covid19 %>%
#dropping geometry for summarising
st_drop_geometry() %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))%>%
select(CountyName, DailyCCase_per_100k) %>%
group_by(CountyName) %>%
#getting mean by grouping on county name
summarise(mean = mean(DailyCCase_per_100k, na.rm = TRUE)) %>%
#arrange desc of mean
arrange(desc(mean))
# get the data of galway and county with lowest and highest cumulative scores
select_county_data<- IRL_counties_Covid19%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))%>%
filter(CountyName %in% c("Galway", head(mean$CountyName, 1), tail(mean$CountyName, 1)))
# for rest of the counties
other_counties<- IRL_counties_Covid19%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))%>%
filter(!CountyName %in% c("Galway", head(mean$CountyName, 1), tail(mean$CountyName, 1)))
#for plotting plot2
IRL_Covid19_plot2 %>%
#loading aesthetics for graphy
ggplot(aes(x = TimeStamp, y=ConfirmedC_per_100k, color = color))+
# for other counties a faded grey shade
geom_smooth(data = other_counties,aes(group = CountyName, colour = "#d3d3d3" ),
size = 1, alpha = 0.9, na.rm = TRUE, method = "loess", se = FALSE)+
# individual colors for galway and highest, lowest counties
geom_smooth(data = select_county_data, aes(group = CountyName, color = CountyName),
size = 1, alpha = 0.8, na.rm = TRUE, method = "loess", se = FALSE)+
# settings colors
scale_color_manual(values = c("#d3d3d3", palette[3],palette[6] , palette[4]),
labels = c("Others", "Galway", "Monaghan", "Wicklow"))+
# setting labels on a sequence of values for y axis
scale_y_continuous(limits = c(0, 19000),
breaks = seq(0, 19000, by = 2000),
name = "Confirmed Cases (Per 100,000 people) -->")+
# setting dates on the x axis
scale_x_date(date_breaks = "months", date_labels = "%b-%y",
name = "Time -->")+
#title
ggtitle("Cumulative Covid cases in Galway compared to Other counties")+
#labels
labs(caption = "Source: Covid Data Ireland")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 50, vjust = 0.5, hjust=1),
axis.title.x = element_text(vjust = -2.5),
legend.position = "top",
legend.title = element_blank())
library(tidyr)
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
plot_3 <- plot_3[plot_3$TimeStamp == ymd("2021-01-01") | plot_3$TimeStamp ==ymd("2021-01-29"),]%>%
select(CountyName, ConfirmedC_per_100k)
pivot_wider(plot_3, names_from = c(ConfirmedC_per_100k, geometry), values_from = CountyName)
plot_3
pivot_wider(plot_3, names_from = c(ConfirmedC_per_100k, geometry), values_from = CountyName)
plot_3
pivot_wider(names_from = c(ConfirmedC_per_100k, geometry), values_from = CountyName)
plot_3
plot_3 %>% pivot_wider(names_from = ConfirmedC_per_100k, values_from = CountyName)
plot_3 %>% pivot_wider(names_from = c(plot3$ConfirmedC_per_100k, geometry), values_from = CountyName)
plot_3 %>% pivot_wider(names_from = c(plot_3$ConfirmedC_per_100k, geometry), values_from = CountyName)
plot_3 %>% pivot_wider(names_from = c(plot_3$ConfirmedC_per_100k, plot3$geometry), values_from = plot_3$CountyName)
plot_3 %>% pivot_wider(names_from = c(plot_3$ConfirmedC_per_100k, plot_3$geometry), values_from = plot_3$CountyName)
plot_3 %>% pivot_wider(names_from = CountyName, values_from = c(ConfirmedC_per_100k, geometry))
plot_3
plot_3 %>% pivot_wider(names_from = CountyName, values_from = c(ConfirmedC_per_100k, geometry))
table(plot_3)
typeof(plot_3)
plot_3
plot_3 %>% pivot_wider.sf(names_from = CountyName, values_from = c(ConfirmedC_per_100k, geometry))
plot_3 <- plot_3[plot_3$TimeStamp == ymd("2021-01-01") | plot_3$TimeStamp ==ymd("2021-01-29"),]%>%
select(CountyName, ConfirmedC_per_100k)
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
plot_3 <- plot_3[plot_3$TimeStamp == ymd("2021-01-01") | plot_3$TimeStamp ==ymd("2021-01-29"),]%>%
select(CountyName, ConfirmedC_per_100k)
View(plot_3)
plot_3 %>% pivot_wider.sf(names_from = CountyName, values_from = c(ConfirmedC_per_100k, geometry))%>%
mutate(diff = ConfirmedC_per_100k - lag(ConfirmedC_per_100k, default = first(ConfirmedC_per_100k)))
plot_3 %>%
mutate(diff = ConfirmedC_per_100k - lag(ConfirmedC_per_100k, default = first(ConfirmedC_per_100k)))
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
plot_3 <- plot_3[plot_3$TimeStamp == ymd("2021-01-01") | plot_3$TimeStamp ==ymd("2021-01-29"),]%>%
select(CountyName, ConfirmedC_per_100k)
as_tibble(plot_3)
pivot_wider(plot_3, names_from = ConfirmedC_per_100k, values_from = c(CountyName, geometry)
pivot_wider(plot_3, names_from = ConfirmedC_per_100k, values_from = c(CountyName, geometry))
plot_3 %>% pivot_wider(names_from = ConfirmedC_per_100k, values_from = c(CountyName, geometry)
plot_3 %>% pivot_wider(names_from = ConfirmedC_per_100k, values_from = c(CountyName, geometry))
plot_3 <- plot_3[seq(2, nrow(plot_3), 2), ]
plot_3
library(tidyr)
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
plot_3 <- plot_3[plot_3$TimeStamp == ymd("2021-01-01") | plot_3$TimeStamp ==ymd("2021-01-29"),]%>%
select(CountyName, ConfirmedC_per_100k) %>%
mutate(diff = ConfirmedC_per_100k - lag(ConfirmedC_per_100k,
default =  first(ConfirmedC_per_100k)))
plot_3
plot_3 <- plot_3[seq(2, nrow(plot_3), 2), ]
plot_3
mean = mean(plot_3$ConfirmedC_per_100k)
mean
plot_3 <- plot_3 %>% mutate(diff = ConfirmedC_per_100k - mean)
plot_3
plot_3 <- plot_3 %>% mutate(diff = ConfirmedC_per_100k - mean) %>%
geom_sf(aes(fill = diff))
typeof(plot_3)
plot_3
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
plot_3
library(tidyr)
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
plot_3 <- plot_3[plot_3$TimeStamp == ymd("2021-01-01") | plot_3$TimeStamp ==ymd("2021-01-29"),]%>%
select(CountyName, ConfirmedC_per_100k) %>%
mutate(diff = ConfirmedC_per_100k - lag(ConfirmedC_per_100k,
default =  first(ConfirmedC_per_100k)))
plot_3 <- plot_3[seq(2, nrow(plot_3), 2), ]
mean = mean(plot_3$ConfirmedC_per_100k)
plot_3 <- plot_3 %>% mutate(diff = ConfirmedC_per_100k - mean) %>%
geom_sf(aes(fill = -diff))
plot_3 <- plot_3 %>% mutate(diff = ConfirmedC_per_100k - mean) %>%
geom_sf(mapping = aes(fill = -diff))
plot_3 %>% mutate(diff = ConfirmedC_per_100k - mean) %>%
geom_sf(mapping = aes(fill = -diff))
plot_3 %>% mutate(diff = ConfirmedC_per_100k - mean)
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
typeof(plot_3)
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
typeof(plot_3)
plot_3 %>% mutate(diff = ConfirmedC_per_100k - mean)
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
plot_3 <- plot_3[plot_3$TimeStamp == ymd("2021-01-01") | plot_3$TimeStamp ==ymd("2021-01-29"),]%>%
select(CountyName, ConfirmedC_per_100k) %>%
mutate(diff = ConfirmedC_per_100k - lag(ConfirmedC_per_100k,
default =  first(ConfirmedC_per_100k)))
plot_3 <- plot_3[seq(2, nrow(plot_3), 2), ]
mean = mean(plot_3$ConfirmedC_per_100k)
plot_3 %>% mutate(diff = ConfirmedC_per_100k - mean)
plot_3 %>% mutate(diff = ConfirmedC_per_100k - mean) %>%
geom_sf(mapping = aes(fill = -diff))
knitr::opts_chunk$set(echo = TRUE)
#Importing Libraries
library(sf)
library(dplyr)
library(ggplot2)
library(lubridate)
library(colorblindr)
#loading the shape file
IRL_counties_Covid19 <- st_read("C:\\Users\\Smitesh\\Documents\\Football Data Analysis\\Data\\Data Visualization\\Assignment 2\\CovidCountyStatisticsIreland_v2.shp", quiet = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#Importing Libraries
library(sf)
library(dplyr)
library(ggplot2)
library(lubridate)
library(colorblindr)
#loading the shape file
IRL_counties_Covid19 <- st_read("C:\\Users\\Smitesh\\Documents\\Football Data Analysis\\Data\\Data Visualization\\Assignment 2\\CovidCountyStatisticsIreland_v2.shp", quiet = TRUE)
#ignore warnings
options(warn=-1)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
#loading colorblind colors
palette <- colorblindr::palette_OkabeIto
#normalising dailyccases and confirmdccases
IRL_Covid19_2021_12_21<- IRL_counties_Covid19%>%
filter(TimeStamp == ymd("2021-12-21"))%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
#getting the mean of confirmed cases per 100k for plotting
mean_daily_cases <- IRL_Covid19_2021_12_21 %>%
select(ConfirmedC_per_100k) %>%
st_drop_geometry() %>%
unlist() %>%
mean()
#for plotting the graph
IRL_Covid19_2021_12_21 %>%
# creating color column for plotting color different for galay, less than mean and
#more than mean
mutate(color = ifelse(CountyName == "Galway", "1",
ifelse(ConfirmedC_per_100k < mean_daily_cases, "2", "3"))) %>%
#loading aesthetics for the graphy reordering for sorting
ggplot(aes(x = ConfirmedC_per_100k, y = reorder(CountyName,ConfirmedC_per_100k)))+
#geom_point for dot plot
geom_point(size = 2, aes(color = color))+
#mean line
geom_vline(aes(xintercept = mean_daily_cases))+
#support line
geom_linerange(aes(xmin = mean_daily_cases, xmax = ConfirmedC_per_100k, color = color),
linetype = "dashed")+
#setting colors and lables
scale_color_manual(values = c(palette[6], palette[5], palette[1]),
labels = c("Galway", "Counties better than average",
"Counties worse than average"))+
#changeing x ticks for graph
scale_x_continuous(limits = c(10000, 19000),
breaks = seq(10000, 19000, by = 1000),
name = "Confirmed Cases (Per 100,000 people) -->")+
scale_y_discrete(name = "Counties -->")+
#adding the mean line mark
annotate(x=mean_daily_cases+900, y=1, label="<- mean line", color="black",
geom = "text", lineheight = .6)+
#theme set
theme_minimal()+
#title
ggtitle("Confirmed Cases for counties compared to average on 21st Dec 21")+
#caption
labs(caption = "Source: Covid Data Ireland")+
#for legend position
theme(legend.position = "top",
legend.title = element_blank())
#normalising for plotting
IRL_Covid19_plot2 <- IRL_counties_Covid19%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
# getting a list of means by counties and taking the first and last form highest
#and lowest values of cumulative data
mean <- IRL_counties_Covid19 %>%
#dropping geometry for summarising
st_drop_geometry() %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))%>%
select(CountyName, DailyCCase_per_100k) %>%
group_by(CountyName) %>%
#getting mean by grouping on county name
summarise(mean = mean(DailyCCase_per_100k, na.rm = TRUE)) %>%
#arrange desc of mean
arrange(desc(mean))
# get the data of galway and county with lowest and highest cumulative scores
select_county_data<- IRL_counties_Covid19%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))%>%
filter(CountyName %in% c("Galway", head(mean$CountyName, 1), tail(mean$CountyName, 1)))
# for rest of the counties
other_counties<- IRL_counties_Covid19%>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))%>%
filter(!CountyName %in% c("Galway", head(mean$CountyName, 1), tail(mean$CountyName, 1)))
#for plotting plot2
IRL_Covid19_plot2 %>%
#loading aesthetics for graphy
ggplot(aes(x = TimeStamp, y=ConfirmedC_per_100k, color = color))+
# for other counties a faded grey shade
geom_smooth(data = other_counties,aes(group = CountyName, colour = "#d3d3d3" ),
size = 1, alpha = 0.9, na.rm = TRUE, method = "loess", se = FALSE)+
# individual colors for galway and highest, lowest counties
geom_smooth(data = select_county_data, aes(group = CountyName, color = CountyName),
size = 1, alpha = 0.8, na.rm = TRUE, method = "loess", se = FALSE)+
# settings colors
scale_color_manual(values = c("#d3d3d3", palette[3],palette[6] , palette[4]),
labels = c("Others", "Galway", "Monaghan", "Wicklow"))+
# setting labels on a sequence of values for y axis
scale_y_continuous(limits = c(0, 19000),
breaks = seq(0, 19000, by = 2000),
name = "Confirmed Cases (Per 100,000 people) -->")+
# setting dates on the x axis
scale_x_date(date_breaks = "months", date_labels = "%b-%y",
name = "Time -->")+
#title
ggtitle("Cumulative Covid cases in Galway compared to Other counties")+
#labels
labs(caption = "Source: Covid Data Ireland")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 50, vjust = 0.5, hjust=1),
axis.title.x = element_text(vjust = -2.5),
legend.position = "top",
legend.title = element_blank())
library(tidyr)
plot_3 <- IRL_counties_Covid19 %>%
mutate(ConfirmedC_per_100k =  round(100000  * ConfirmedC/Population,1))%>%
mutate(DailyCCase_per_100k =  round(100000  * DailyCCase/Population, 1))
plot_3 <- plot_3[plot_3$TimeStamp == ymd("2021-01-01") | plot_3$TimeStamp ==ymd("2021-01-29"),]%>%
select(CountyName, ConfirmedC_per_100k) %>%
mutate(diff = ConfirmedC_per_100k - lag(ConfirmedC_per_100k,
default =  first(ConfirmedC_per_100k)))
plot_3 <- plot_3[seq(2, nrow(plot_3), 2), ]
mean = mean(plot_3$ConfirmedC_per_100k)
plot_3 %>% mutate(diff = ConfirmedC_per_100k - mean) %>%
geom_sf(mapping = aes(fill = -diff))
View(plot_3)
